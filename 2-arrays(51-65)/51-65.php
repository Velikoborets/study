<?php

//************ МАССИВЫ В PHP 51\65 **********// ✓

// Массив - перемен. в кот. хранится набор разных значений.
// (вспоминаем ящик с ячейками и котами внутри).
// ячейка + кот = элемент массива

// Пример простого, индексного, массива с разными типами данных:

// $arr = ['пн', 'вт', null, 1, 3, false];



//******* КАК ПОСМОТРЕТЬ СОДЕРЖИМОЕ МАССИВА В PHP 52\65 *******// ✓

// С помощью фу-ии var_dump(); 
// Выведется массив с ключами:

// 0 => string 'пн' (length=4)
// 1 => string 'вт' (length=4)
// 2 => null
// 3 => int 1
// 4 => int 3
// 5 => boolean fals



//******* КАК ВЫВЕСТИ ОТДЕЛЬНЫЙ ЭЛЕМЕНТ МАССИВА В PHP 53\65 *******// ✓

// echo $arr[3];    // выведет 1; со строкой аналогично работает

// ДЗ:
// $arr = [1, 2, 3, 4];
// $res = $arr[0] * $arr[1];
// $res2 = $arr[2] * $arr[3];
// $res3 = $res + $res2;
// echo $res3;					// выведет 14



//******* АССОЦИАТИВНЫЕ МАССИВЫ В PHP 54\65 *******// ✓

// Отличия индекс-го от ассоц-го:
// 1. В индексном только числа  в роле ключей
// 1. В ассоциативном в роле ключей строки :

// $arr = ['fst' => 'пн', 'sec' => 'вт', 'thr' => 'ср'];
// echo $arr['fst'];		// пн



//******* ХИТРОСТЬ С КЛЮЧАМИ В PHP 55\65 *******// ✓

// Когда надо, чтобы нумерация индекс-го arr
// начиналаась с опр. числа то задаём "стартовый ключ"
// а дальше номера зададуться авто-ки:

// $arr = [ 112 => 'пн', 'вт', 'ср']
// echo $arr[113];				// вт



//******* СТРОКОВЫЕ КЛЮЧИ В PHP 56\65 *******// ✓

// Ключи могут быть и строками (ассоциативными):

// $date = ['year' => '2024', 'month' => 'febrary'];
// echo $date['year'] . ' - ' . $date['month'];



//******* ПОРЯДОК ЭЛЕМЕНТОВ В МАССИВАХ В PHP 57\65 *******// ✓

// В индексном массиве - элементы идут по порядку.
// В ассоциативном - как угодно.
// Элементам наход. в ассоц. $arr без ключа, ключ наз. авт. нач с 0



//******* ДЛИНА МАССИВА В PHP 58\65 *******// ✓

// $arr = ['a', 'b', 'c', 'd'];
// echo count($arr);	// выведет 4



//******* ПОСЛЕДНИЙ ЭЛЕМЕНТ МАССИВА В PHP 59\65 *******// ✓

// Посл. эл. индексного массива:
// $arr = [1, 2, 3];

// $last = count($arr) - 1;	 // 3 - 1 = 2, а т.к нумер. в индекс.
							 // нач. с 0, то у знач 3, ключ - 2

// echo $arr[$last];		 // выведи ключ 2



//******* ИЗМЕНЕНИЕ ЭЛЕМЕНТОВ МАССИВА В PHP 60\65 *******// ✓

// Происходят аналогично изм. в строке.
// $arr = ['a', 'b', 'c'];

// т.е по индексу, указываем, что изменить:
// $arr[0] = '!';
// var_dump($arr); // выведет ['!', 'b', 'c']



//******* ПЕРЕЗАПИСЬ ЭЛЕМЕНТОВ МАССИВА В PHP 61\65 *******// ✓

// Можно прочитывать текущее знач. элемента $arr 
// Выполнять с ним операции и записывать обратно в элемент:

// $arr = ['a', 'b', 'c'];

// $arr[0] .= ' доп';
// $arr[2] .= ' 4';

// var_dump($arr);



//******* ИНКРЕМЕНТ И ДЕКРЕМЕНТ (К МАССИВУ) В PHP 62\65 *******// ✓

// Можно применять операции декремента и инкремент к эл.массива:

// $arr = [1, 2, 3, 4];

// $arr[0]++;
// ++$arr[1];
// $arr[2]--;
// --$arr[3];

// var_dump($arr); // выведет [2, 3, 2, 3]



//******* ЗАПОЛНЕНИЕ МАССИВОВ В PHP 63\65 *******// ✓

// Массив можно объявить пустым, а затем добавить в него элементы:

// $arr = [];
// $arr[0] = 'abc';
// $arr[] = '3';
// $arr[] = '4';
// $arr['lolo'] = '5';
// var_dump($arr);
 
// $ar = [1, 2, 3];
// $ar[] = 4; 
// $ar[] = 5; 
// var_dump($ar);



//******* ЯВНОЕ УКАЗАНИЕ КЛЮЧЕЙ В PHP 64\65 *******// ✓

// $arr = [];
// $arr['year'] = 2024;
// $arr['month'] = 'feb';
// $arr['day'] = 'sunday';
// var_dump($arr);



//******* КЛЮЧИ ИЗ ПЕРЕМЕННЫХ В PHP 65\65 *******// ✓

// $arr = [1, 2, 3, 4, 5];
// $key1 = 1;
// $key2 = 2;
// $sum = $arr[$key1] + $arr[$key2];
// echo $sum;		// 5

// $arr = ['a' => 1, 'b' => 2, 'c' => 3]; 
// $key = 'c';
// echo $arr[$key];	// 3

?>
