
<?php

/******** СЕССИИ В PHP 275/281 ✓ **********/

// ЧТО ТАКОЕ СЕССИИ И ЧТО ОНИ ДЕЛАЮТ?
// Сессии - для того, чтобы когда мы переходим между страницами сайта, он (сайт) - запоминал нас. т.е хранил наши данные (то, что мы натыкали на сайте когда им пользовались).

// ВОЗМОЖНОСТИ СЕССИЙ?
// Т.е мы можем записывать инфу в СЕССИЮ и считывать ее оттуда, при следующем запуске, этого или другого скрипта

// ЧТО МОЖНО СДЕЛАТЬ С ПОМОЩЬЮ СЕССИЙ?
// С помощью СЕССИИЙ мы можем реализовать: авторизацию user, корзину инет-магаза итд;

// НЮАНСЫ СЕССИЙ?
// Сессия user хранится на сервере. И живет около получаса (т.е если user бездействует, то сессия удалится и станет пустой).

// КАК РАБОТАТЬ С СЕССИЯМИ?
// Чтобы в сессию записать, что-то, то ее надо инициализировать:
// session_start();

// После инициализации, мы можем записать/прочитать что-то из сессии
// Вышеуказ. действия, делаются с пом. С.Г.М "$_SESSION"

// ПРИМЕРЫ РАБОТЫ С СЕССИЯМИ?

// page2.php             // ПИШЕМ в сессию test значение 'abc'
// session_start();
// $_SESSION['test'] = 'abc';


// result.php              // ЧИТАЕМ из сессии
// session_start();
// echo $_SESSION['test']; // тут на странице будет вывод 'abc'


// ДЗ (Сессии в РНР):
// Сделайте два файла. При запуске первого файла запишите в сессию два числа, а при запуске второго файла - выведите на экран сумму этих чисел.


// page2.php               // ПИШЕМ в сессию '1+2'
// session_start();
// $_SESSION['sum'] = 1 + 2;

// result.php             // ЧИТАЕМ из сессии
// session_start();
// echo $_SESSION['sum']; // тут на странице будет вывод '3'



/**** ВОЗМОЖНЫЕ ПРОБЛЕМЫ ПРИ РАБОТЕ С СЕССИЯМИ В PHP 276/281 ✓ *****/

// ОСНОВНАЯ ПРОБЛЕМА СЕССИЙ?
// Нельзя делать никакого вывода в браузер до окончания работы с сессиями. Иначе будет ошибка:
// (Warning: Cannot send session cookie - headers already sent.)

// ЧТО ТАКОЕ ВЫВОД В БРАУЗЕР?
// Это любой символ до <?php : текст, тег, пробел. Также нельзя делать выводы через echo, var_dump и print_r
// Кодировка документа обязательно UTF-8 без BOM.

// ДЗ (Возможные проблемы при работе с сессиями):
// Исправить ошибки в 3х заданиях:

// 1
/*text
<?php
	session_start();      // <p> - до сессии нельзя
?> */

// 2
/* <p>
<?php
    session_start();      // <p> - до сессии нельзя
?>
</p> */

// 3
/* echo 'text';         // echo 'text' - нельзя вывод текста
session_start(); */



/**** ИСПОЛЬЗОВАНИЕ СЕССИЙ НА ОДНОЙ СТРАНИЦЕ В PHP 277/281 ✓ *****/

// Можно читать и записывать сессии на одной странице.

// Например, сделаем счётчик обновления страницы user сайта:
// 1. Для этого, при первом заходе user, запишем в перемен. сессии 1.
// 2. А при всех последующих заходах будем увеличивать перемен. на 1.

/* session_start();

// записали:
if (!isset($_SESSION['counter'])) { // если не существует
    $_SESSION['counter'] = 1; // первый заход на стр. записываем 1
} else {
    $_SESSION['counter']++;   // последующие заходы на стр приб. 1
}

// прочитали:
echo $_SESSION['counter']; */


// ДЗ (Исп. сессий на одной странице в РНР):

// 1
// Запишите в сессию время захода пользователя на сайт. При обновлении страницы выводите сколько секунд назад пользователь зашел на сайт.

/* session_start();
if (!isset($_SESSION['count'])) {
    $_SESSION['count'] = time();
} else {
    $_SESSION['counter'] = time();
    $_SESSION['res'] = $_SESSION['counter'] - $_SESSION['count'];
}
echo $_SESSION['res'];
var_dump($_SESSION); */



/**** УДАЛЕНИЕ СЕССИЙ В PHP 278/281 ✓ *****/

// unset () - удаляет переменную сессии не затрагивая остальных.
// unset($_SESSION['var']); // после этого перемен. станет null

// ДЗ (УДАЛЕНИЕ СЕССИЙ в РНР):
// 1
// Модифицируйте этот код так, чтобы при достижении счетчиком значения 10, отсчет начинался сначала.
/* session_start();
if ($_SESSION['counter'] > 9) {
	unset($_SESSION['counter']);
}

if (!isset($_SESSION['counter'])) {
	$_SESSION['counter'] = 1;
} else {
	$_SESSION['counter']++;
}
echo $_SESSION['counter']; */



/**** ЗАВЕРШЕНИЕ ВСЕЙ СЕССИИ в PHP 279/281 ✓ *****/

// session_destroy(); - удаляет все переменные сессии для user
// * можно исп-ть, только когда фу-я запущена через session_start.

// ДЗ (завершение всей сессии пользователя):

// page2.php
/* session_start();
$_SESSION['counter'] = 2;
var_dump($_SESSION['counter']);
*/

// result.php
/* session_start();
var_dump($_SESSION['counter']);

if (isset($_SESSION)) {
    session_destroy();
    var_dump($_SESSION);
}
*/



/**** СЕССИИ И ФОРМЫ В PHP 280/281 ✓ *****/

// Eсть скрипт, который принимает из формы в сессию 2 числа
// И выводит их сумму в другом файле.

// У нас 2 файла page2.php и result.php.
// В сode.php запишем код обработки формы.
// В result.php сделаем результат обработки.

// page2.php

// СЕССИЯ

// Тут код обработки формы. Где мы запишем данные инпутов.
// Из С.Г.М $_GET в сессию.
// Напоминаю. Код должен стоять до формы!!

/*
session_start();

if(!empty($_GET)) {
// если форма отправлена вписываем данные в сессию
    $_SESSION['num1'] = $_GET['num1'];
    $_SESSION['num2'] = $_GET['num2'];
}
*/

// ФОРМА
/*
<form method="get">
<div class="form__container">
    <label for="num1"> Число 1:
    <input name="num1" type="text">
</div>
<div class="form__container">
    <label for="num2"> Число 2:
    <input name="num2" type="text">
</div>
<div class="form__button-container">
    <input class="submit__styles" type="submit" value="send">
</div>
</form>
*/


// result.php
// Результат обработки формы(сумма чисел):
/*
session_start();

if (!empty($_SESSION)) {
    echo $_SESSION['num1'] + $_SESSION['num2'];
} else {
    echo 'сессия пуста!';
}
 */

// два файла нам нужны, чтобы код обработки формы и форма находились в 1 файле. А результат в другом, что иногда удобно. Надо знать

// ДЗ (Сессии и формы в РНР):

// 1
// На одной странице с помощью формы спросите у пользователя фамилию, имя и возраст. Запишите эти данные в сессию. При заходе на другую страницу выведите эти данные на экран.
// Ответ: ДЗ абсолютно аналогично примеру выше!



/**** ЗАПИСЬ МАССИВОВ В СЕССИИ PHP 281/281 ✓ *****/

// Можем записать ВСЕ ДАННЫЕ из формы  В СЕСССИЮ:
// ($_SESSION = $_GET, НО мы затираем все данные, которые там были)
// (А это проблема, если проект большой).
// (Лучше записать в перемен. сессии, например: $_SESSION['nums'])

// page2.php
/*
if (!empty($_GET)) {
    $_SESSION['nums'] = $_GET;
}
*/
// теперь мы массив $_GET записали в $_SESSION['nums'];

// form
/*
<div class="form__container">
    <label for="year"> Возраст:
        <input name="year" type="text">
</div>
<div class="form__button-container">
    <input class="submit__styles" type="submit" value="send">
</div>
*/

// result.php
// Теперь, если в сессию, записались данные из формы, то выведем сумму элементов нашего массива.
/*
if (!empty($_SESSION)) {
    echo array_sum($_SESSION['nums']);
}
*/


// ДЗ (Запись массивов в сессии PHP)
// 1
// На одной странице с помощью формы спросите у пользователя имя, возраст, зарплату и еще что-нибудь. Запишите эти данные в одну переменную сессии в виде массива. При заходе на другую страницу переберите сохраненные данные циклом и выведите каждый элемент массива в своем теге li тега ul.

// page2.php
/*
session_start();

if (!empty($_GET)) {
    $_SESSION['users_data'] = $_GET;
}
*/

// form
/*
<div class="form__container">
		<label for="name"> Имя:
		<input name="name" type="text">
	</div>
	<div class="form__container">
		<label for="last_name"> Фамилия:
		<input name="last_name" type="text">
	</div>
*/

// result.php
/*
<ul>
    <?php if (isset($_SESSION['users_data'] )): ?>
    <?php $user_data = $_SESSION['users_data'];  ?>
    <?php foreach ($user_data as $user): ?>
    <li><?="$user" ?></li>
    <?php endforeach; ?>
    <?php endif; ?>
</ul>
*/


?>

