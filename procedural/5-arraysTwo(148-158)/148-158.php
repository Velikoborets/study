
<?php

//****** МНОГОМЕРНЫЕ МАССИВЫ В PHP 148\158 ******// ✓

// Многомерный массив - когда 1 массив наход. внутри 2-го массива.
// (В наш. случае массив $arr сост. из 3х элементов явл. массивами):

// $arr = [
// 	['a', 'b', 'c'],
// 	['d', 'e', 'f'],
// 	['g', 'h', 'i'],
// ];

// Соотв. вложенность может быть двухмерная, трёхмерная, итд
// Чтобы вывести элемент надо писать не одну пару [] , а две [] [] :

// $arr[0][1]; // выведет 'b';
// $arr[1][2]; // выведет 'f';



//****** ТРЁХМЕРНЫЙ МАССИВ В РНР 149\158 ******// ✓ 

// Пример:

// $arr = [
// 	[
// 		['a', 'b'],
// 		['c', 'd'],
// 	],
// 	[
// 		['e', 'f'],
// 		['g', 'h'],
// 	],
// 	[
// 		['i', 'j'],
// 		['k', 'l'],
// 	],
// ]

// Для вывода элементов из такого массива, уже необходимо написать
// три [] скобки:

// ДЗ:
// $arr = [
// 	[
// 		[1, 2],
// 		[3, 4],
// 	],
// 	[
// 		[5, 6],
// 		[7, 8],
// 	],
// ];

// $sum = 0;
// foreach ($arr as $elem) {
// 	foreach ($elem as $value) {
// 		foreach ($value as $v) {
// 			$sum += $v;
// 		}
// 	}
// }

// echo $sum;



//****** АССОЦИАТИВНЫЕ МАССИВЫ В PHP 150\158 ******// ✓ 

// Многомерные массивы могут быть ассоциативными:

// №2
// Выведите с помощью этого массива английское название среды.
// $arr = [
// 	'ru' => ['пн', 'вт', 'ср', 'чт', 
// 		'пт', 'сб', 'вс'], 
// 	'en' => ['mn', 'ts', 'wd', 'th', 
// 		'fr', 'st', 'sn'], 
// ];
// echo $arr['en'][2];

// №3
// Выведите с помощью этого массива 
// сумму зарплат первого и третьего юзера.
// $arr = [
// 	[
// 		'name'   => 'user1',
// 		'age'    => 30,
// 		'salary' => 1000,
// 	],
// 	[
// 		'name'   => 'user2',
// 		'age'    => 31,
// 		'salary' => 2000,
// 	],
// 	[
// 		'name'   => 'user3',
// 		'age'    => 32,
// 		'salary' => 3000,
// 	],
// ]; 
// echo $arr[0]['salary'];
// echo $arr[2]['salary'];



//****** ПРОИЗВОЛЬНЫЕ МАССИВЫ В PHP 151\158 ******// ✓

// Когда рядом в массивах расположены и обычные элементы и массивы:

// вывести на экран все элементы этого массива по очереди:

// $arr = [
//		  0    1	/*	  2-эл	   */ [0][1] // на выводе "b"
/* 0 */ //['a', 'b', [1, 2, 3, [5, 6] ] ],

// заходим в него и дальше:
					
//					0  1  2	 /*3-эл*/ [0][2][3] // на выводе "3"
/* 0 */ //['a', 'b', [1, 2, 3, [5, 6] ] ],

							/* 3[0] */ //[0][2][3][0]//на выводе "5"
/* 0 */ //['a', 'b', [1, 2, 3, [5, 6] ] ], 


/* 1 */ // [4, 5], 

/* 2 */ //['d', ['e', 'f', [1, 2, 3, [5, 5] ] ] ]

// ];



//****** ПЕРЕБОР МНОГОМЕРНЫХ МАССИВОВ В PHP 152\158 ******// ✓

// С помощью двух вложенных циклов 
// найдите сумму элементов этого массива.

// $arr = [
// [1, 2, 3],
// [4, 5, 6, 7],
// [8, 9]
// ];

// foreach ($arr as $elem) {
// 	foreach ($elem as $value) {
// 		echo $value . '<br>';
// 	}
// }



//****** ПЕРЕБОР ТРЕХМЕРНОГО МАССИВА В PHP 153\158 ******// ✓

// С помощью трех вложенных циклов 
// найдите сумму элементов этого массива:

// $arr = [
// 	[
// 		[1, 2, 3],
// 		[6, 7, 8],
// 		[3, 8, 4],
// 		[6, 7, 9],
// 	],
// 	[
// 		[9, 1, 2],
// 		[4, 5, 6],
// 	],
// 	[
// 		[9, 1, 2],
// 		[4, 5, 6],
// 		[5, 6, 3],
// 	],
// ];
 
// foreach ($arr as $elem) {
// 	foreach ($elem as $value) {
// 		foreach ($value as $v) {
// 			echo $v . '<br>';
// 		}
// 	}
// }



//*** РАБОТА С КЛЮЧАМИ В МНОГОМЕРНЫХ МАССИВАХ В PHP 154\158 ***// ✓

// №1
// Выведите элементы этого массива в формате ключ-значение.

// $arr = [
// 	[
// 		'name'   => 'user1',
// 		'age'    => 30,
// 		'salary' => 1000,
// 	],
// 	[
// 		'name'   => 'user2',
// 		'age'    => 31,
// 		'salary' => 2000,
// 	],
// 	[
// 		'name'   => 'user3',
// 		'age'    => 32,
// 		'salary' => 3000,
// 	],
// ];

// foreach($arr as $elem) {
// 	foreach($elem as $key => $value) {
// 		echo $key . ' - ' . $value . '<br>';
// 	}
// }

// №2
// С помощью двух вложенных циклов выведите элементы 
// этого массива в формате имя группы - имя юзера^

// $arr = [
// 	'group1'  => ['user11', 'user12', 
// 		'user13', 'user43'], 
// 	'group2'  => ['user21', 'user22', 
// 		'user23'], 
// 	'group3'  => ['user31', 'user32', 
// 		'user33'], 
// 	'group4'  => ['user41', 'user42', 
// 		'user43'], 
// 	'group5'  => ['user51', 'user52'],
// ];
// 
// foreach($arr as $k => $elem) {
// 	foreach($elem as $key => $value) {
// 		echo $k . ' - ' . $value .'<br>' ;
// 	}
// }



//*** ЗАПОЛНЕНИЕ МНОГОМЕРНЫХ МАССИВОВ PHP 155\158 ***// ✓

// 1. Создаем пустой массив
// 2. Внешний цикл - создаёт подмассив
// 3. Внутренний - заполняет подмассив числами.

// № 0
// Необходимо создать, вот такой многомерный массив.
// С помощью циклов:
// [
// [1, 2, 3], 
// [1, 2, 3], 
// [1, 2, 3]
// ];
// $arr = [];
// for ($i = 0; $i < 3; $i++) {
// 	for ($j = 0; $j < 3; $j++) {
// 		$arr[$i][$j] = $j + 1;
// 	}
// } 
// var_dump($arr);


// № 1
// Сформируйте с помощью двух вложенных циклов следующий массив:
// [
// [1, 2, 3, 4, 5], 
// [1, 2, 3, 4, 5], 
// [1, 2, 3, 4, 5]
// ];
// $arr = [];
// for ($i = 0; $i < 3; $i++) {
// 	for ($j = 0; $j < 5; $j++) {
// 		$arr[$i][$j] = $j + 1;
// 	}
// }
// var_dump($arr);


// №2
// Сформируйте с помощью двух вложенных циклов следующий массив:
// [
// ['x', 'x', 'x', 'x'], 
// ['x', 'x', 'x', 'x'], 
// ['x', 'x', 'x', 'x']
// ];
// $arr = [];
// for ($i = 0; $i < 3; $i++) {
// 	for ($j = 0; $j < 5; $j++) {
// 		$arr[$i][$j] = 'x';
// 	}
// }
// var_dump($arr);


// №3
// Сформируйте с помощью трех вложенных циклов следующий массив:
// [
// 	[
// 		[1, 2, 3, 4, 5],
// 		[1, 2, 3, 4, 5],
// 	],
// 	[
// 		[1, 2, 3, 4, 5],
// 		[1, 2, 3, 4, 5],
// 	],
// 	[
// 		[1, 2, 3, 4, 5],
// 		[1, 2, 3, 4, 5],
// 	],
// ];
// $arr = [];
// for ($i = 0; $i < 3; $i++) {
// 	for ($j = 0; $j < 2; $j++) {
// 		for ($k = 0; $k < 5; $k++) {
// 			$arr[$i][$j][$k] = $k + 1; 
// 		}
// 	} 
// }
// var_dump($arr);



//* ЗАПОЛНЕНИЕ МНОГОМЕРНЫХ МАССИВОВ ЧИСЛАМИ ПО ПОРЯДКУ 156\158 *// ✓

// Создать такой массив:
// [
// [1, 2, 3], 
// [4, 5, 6], 
// [7, 8, 9]
// ];

// $arr = [];

// for ($k = 1, $i = 0; $i < 3; $i++) {
// 	for ($j = 0; $j < 3; $j++) {
// 		$arr[$i][$j] = $k++;	
// 	}
// }
// var_dump($arr);

// счётчик [$i] выводит 3 нуля(0),
// то озн. запись в массив 0, ключей [$j] - 0,1,2 
// и значений [$k] - 1,2,3
// далее счётчик [$i] выводит 3 ед(1),
// то озн. запись в массив 1, ключей [$j] - 3,4,5
// и значений [$k] - 4,5,6

// $k счётчик "включен" непосредственно в присваивании, для удобства
// А его нач. знач. опред. в 1-ом цикле (там оно не зависимо).
// (можно вывести и за цикл, при желании)

// №1
// Сформируйте с помощью двух вложенных циклов следующий массив:
// [
// [1, 2], 
// [3, 4],
// [5, 6],
// [7, 8]
// ];
// $arr = [];
// for ($k = 1, $i = 0; $i < 4; $i++) {
// 	for ($j = 0; $j < 2; $j++) {
// 		$arr[$i][$j] = $k++;
// 	}
// }
// var_dump($arr);

// №2
// Сформируйте с помощью двух вложенных циклов следующий массив:
// [
// [2, 4, 6], 
// [8, 10, 12], 
// [14, 16, 18], 
// [20, 22, 24]
// ]

// for ($k = 0, $i = 0; $i < 4; $i++) {
// 	for ($j = 0; $j < 3; $j++) {
// 		$k += 2;
// 		$arr[$i][$j] = $k;
// 	}
// }
// var_dump($arr);

// №3
// Сформируйте с помощью трех вложенных циклов
// следующий трехмерный массив:

// [
// 	[
// 		[1, 2], 
// 		[3, 4]
// 	],
// 	
// 	[
// 		[5, 6], 
// 		[7, 8]
// 	]
// ];

// $l = 1;
// for ($i = 0; $i < 2; $i++) {
// 	for ($j = 0; $j < 2; $j++) {
// 		for ($k = 0; $k < 2; $k++) {
// 			$arr[$i][$j][$k] = $l++;
// 		}
// 	}
// }
// var_dump($arr);



//**** МАССИВ АССОЦИАТИВНЫХ МАССИВОВ В PHP 157\158 ****// ✓

// Часто, в РНР появляются массивы содержащие набор сущностей,
// напр. список пользователей или список продуктов:

// $users = [
// 	[
// 		'name'   => 'user1',
// 		'age'    => 31,
// 		'salary' => 1000,
// 	],
// 	[
// 		'name'   => 'user2',
// 		'age'    => 32,
// 		'salary' => 2000,
// 	];

// тут у нас двумерный ассоциативный массив
// для перебора его исп. один foreach переб. подмассивы.
// а части получают по ключу и запис. в нужном порядке и формате.

// выведем столбец наших работников в опр. формате:
// foreach ($users as $user) {
// 	echo $user['name'] . ': ' . $user['salary'] . '$, ' 
// 	. $user['age'] . '<br>';
// }

// ДЗ:
// Выведите с помощью этого массива столбец продуктов 
// в каком-нибудь придуманном вами формате.

// $products = [
// 	[
// 		'name'   => 'мясо',
// 		'price'  => 100,
// 		'amount' => 5,
// 	],
// 	[
// 		'name'   => 'овощи',
// 		'price'  => 200,
// 		'amount' => 6,
// 	],
// 	[
// 		'name'   => 'фрукты',
// 		'price'  => 300,
// 		'amount' => 7,
// 	],
// ];
// 
// foreach($products as $key => $elem) {
// 	echo 'наименование - ' . $elem['name'] . '<br>' .
// 	'цена - ' . $elem['price'] . '<br>' .
// 	'количество - ' . $elem['amount'] . '<br>';
// }



//**** КОНВЕРТАЦИЯ МНОГОМЕРНЫХ МАССИВОВ В PHP 158\158 ****// ✓

// У нас есть массив:
// $users = [
// 	[
// 		'id' => 11,
// 		'name' => 'name11',
// 		'surname' => 'surname11',
// 	]
// ]....

// Надо сделать такой:
// [
// 	11 => [
// 		'id' => 11,
// 		'name' => 'name11',
// 		'surname' => 'surname11',
// ]...

// Решение:
// $res = [];
// foreach ($users as $elem) {
// 	$res[$elem['id']] = $elem;
// }
// var_dump($res);


// ДЗ:
// №1
// Дан такой массив:
// $arr = [
//  	[
//  		'country' => 'Россия',
//  		'city' =>    'Москва',
//  	],
//  	[
// ]...

// Написать код, который перед. структуру данных вот в такую:
// [
// 	'Россия'=> [
// 		'Москва', 'Питер', 'Владивосток',
// 	],
// 	'Беларусь'=> [
// 		'Минск', 'Могилев'
// 	],
// 	'Украина'=> [
// 		'Киев', 'Львов'
// 	],
// ]

// Решение:
// $res = [];
// foreach ($arr as $elem) {
// 	$res[$elem['country']][] = $elem['city'];
// }
// 
// var_dump($res);


// №2
// У нас есть массив:

// $arr = [
// 	[
// 		'date'  => '2019-12-29',
// 		'event' => 'name1'
// 	],
// ]...

// Переделать вот так:

// [
// 	'2019-12-29'=> ['name1', 'name3', 'name5', 
// 		'name7'], 
// 	'2019-12-30'=> ['name4', 'name8', 
// 		'name9'], 
// 	'2019-12-31'=> ['name2', 'name6'],
// ]...

// Решение:
// $res = [];
// foreach ($arr as $elem) {
// 	$res[$elem['date']][] = $elem['event'];
// }
// var_dump($res);


// №3
// Дан массив:
// $arr = [
// 		// 0
// 	'2019-12-29'=> ['name1', 'name2', 'name3', 
// 		'name4'], 
// 		// 1
// 	'2019-12-30'=> ['name5', 'name6', 
// 		'name7'], 
// 		// 2
// 	'2019-12-31'=> ['name8', 'name9']
// ];

// Переделать в такой:
// $res = [
// 		[
// 			'date'  => '2019-12-29',
// 			'event' => 'name1'
// 		]
// ];

// $d = 'date';
// $e = 'event';
// $res = [];
// foreach ($arr as $key => $elem) {
// 	foreach ($elem as $value) {
// 		$res[] = [$d => $key, $e => $value];
// 	}
// }
// var_dump($res);
